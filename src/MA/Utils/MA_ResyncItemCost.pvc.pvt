!o=new("MA_ResyncItemCost",%sys_ss);o'ResyncItemCost()
DEF CLASS "MA_ResyncItemCost"

	LOCAL POSConnServer$="NTServer18"
	LOCAL POSConnDatabase$="FinishedGoods"
	!LOCAL POSConnServer$="10.1.100.19"
	!LOCAL POSConnDatabase$="twretDEV"
	LOCAL POSConnUsername$="SA"
	LOCAL POSConnPassword$="71779121375"
	LOCAL SQLSchema$="dbo"

	LOCAL memFH

	FUNCTION ResyncItemCost()RESYNC_ITEM_COST

	FUNCTION LOCAL OpenConn(Server$,Database$,Username$,Password$)OPEN_CONN
	FUNCTION LOCAL DeleteObject(oObject)DELETE_OBJECT
	FUNCTION LOCAL FreeSQLQuery(oObject)FREE_SQL_QUERY

END DEF
!
RESYNC_ITEM_COST:
	itemCostFH = %sys_ss'OpenTable("IM_ItemCost","COMPANY")
	! run a query to build a table of all records where the UDFs in ItemCost do match what they should in FG_InventoryLog
	! store in memfh and then compare item cost to memfh
	CONN=_OBJ'OpenConn(POSConnServer$, POSConnDatabase$, POSConnUsername$, POSConnPassword$)
	IF NOT(CONN)  { RETURN retFAILURE }

	FGInvIOL$ = CPL("IOLIST FileKey$,ItemCode$, WarehouseCode$, TierType$, GroupSort$, UDF_FormattedLotNo$, CorrectUDF$") 
	!OPEN (HFN,IOL=FGInvIOL$)"*memory*;keydef=[1:1:30],[2:1:3],[3:1:1],[4:1:15]"
	memFH = HFN
	OPEN(memFH)"*memory*"

	!memFH = lfo

	SQLBaseCommand$ = "SELECT S.ItemCode,S.WarehouseCode,S.TierType,S.GroupSort,S.UDF_FormattedLotNo, F.lot + RIGHT('000' + CAST('000' + F.skidnum AS VARCHAR(3)), 3) + RIGHT('000000' + CAST(F.weight AS VARCHAR(6)), 6) as 'CorrectUDF' "
	SQLFrom$ = "FROM dll64...im_itemcost S LEFT OUTER JOIN FinishedGoods.dbo.FGINVENTORY_LOG F ON F.item = S.ItemCode and F.SN = S.GroupSort "
	SQLWhere$ = "WHERE F.Comment = 'Upload' and S.QuantityOnHand>0 and LEN(S.LotSerialNo) < 7 and S.UDF_FormattedLotNo <> F.lot + RIGHT('000' + CAST('000' + F.skidnum AS VARCHAR(3)), 3) + RIGHT('000000' + CAST(F.weight AS VARCHAR(6)), 6)  and Len(F.lot + RIGHT('000' + CAST('000' + F.skidnum AS VARCHAR(3)), 3) + RIGHT('000000' + CAST(F.weight AS VARCHAR(6)), 6) ) < 16"
	SQLCommand$ = SQLBaseCommand$ + SQLFrom$ + SQLWhere$

	FGInvRS = CONN'EXECUTE(SQLCommand$)
	IF (FGInvRS'EOF) {
		_OBJ'LogMessage(2,"No Invoice Records Found")
		coSession'UI'ProgressBar("close")
		mwaRetVal = 0
	}
	counter=0
	WHILE NOT(FGInvRS'EOF)
		ItemCode$ = FGInvRS'Fields("ItemCode")'Value$
		WarehouseCode$ = FGInvRS'Fields("WarehouseCode")'Value$
		TierType$ = FGInvRS'Fields("TierType")'Value$
		GroupSort$ = FGInvRS'Fields("GroupSort")'Value$
		UDF_FormattedLotNo$ = FGInvRS'Fields("UDF_FormattedLotNo")'Value$
		CorrectUDF$ = FGInvRS'Fields("CorrectUDF")'Value$
		fileKey$ = ItemCode$+WarehouseCode$+TierType$+GroupSort$
		!mwaRetVal = retFAILURE
		!WRITE(memFH,KEY=fileKey$,ERR=*NEXT)ItemCode$;mwaRetVAl = retSUCCESS
		!WRITE(memFH,KEY=fileKey$)ItemCode$
		!counter++
		!IF (counter = 10) {
		!	ESCAPE

		!}
		!!IF (NOT(mwaRetVal)) {
		!!	MSGBOX("Failed")
		!!	ESCAPE
		!!	BREAK
		!!}
		READ(itemCostFH,REC=costRec$,KEY=ItemCode$:WarehouseCode$:TierType$:GroupSort$,ERR=*NEXT);recFound=1
		IF (recFound) {
			! on a matching record to the table. double check its UDF does not match the tables CorrectUDF value and then set it and write
			IF (costRec.UDF_FormattedLotNo$ <> CorrectUDF$) {
				costRec.UDF_FormattedLotNo$ = CorrectUDF$
				WRITE(itemCostFH,REC=costRec$);writeCount++
			}
		}
		FGInvRS'MoveNext()
	WEND



	MSGBOX("Utility Finished")
	_OBJ'FreeSQLQuery(FGInvRS)
	_OBJ'DeleteObject(CONN)
	CLOSE(itemCostFH)
RETURN mwaRetVal
!!!!!!!!!
!!!!!!!!!
OPEN_CONN:
	ENTER (Server$),(Database$),(Username$),(Password$)
	DEF OBJECT CONN,"ADODB.Connection"
	ConnStr$="DRIVER={SQL Server};SERVER="+Server$+";UID="+Username$+";PWD="+Password$+";DATABASE="+Database$
	CONN'ConnectionString$=ConnStr$
	CONN'Provider$="sqloledb.1"
	CONN'CommandTimeout=60
	mwaRetVal=0; CONN'OPEN(ConnStr$,ERR=*NEXT); mwaRetVal=1
	msgbox(STR(mwaRetVal))
	IF NOT(mwaRetVal) { _OBJ'LastErrorMsg$="Failed to open connection"; RETURN retFAILURE }
RETURN CONN

DELETE_OBJECT:
	ENTER oObject
	IF oObject { DROP OBJECT oObject; oObject=0 }
RETURN retSUCCESS
!
FREE_SQL_QUERY:
	ENTER oQuery
	IF oQuery {oQuery'PVXFREE() }
RETURN retSUCCESS