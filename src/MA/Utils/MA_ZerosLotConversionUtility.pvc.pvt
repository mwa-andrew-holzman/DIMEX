! ** Utility to change lot numbers for DIMEX
! ** @Author Andrew Holzman
! ** @Date 2018.1.17
! o=new("MA_ZerosLotConversionUtility",%sys_ss);o'ChangeLots() 

DEF CLASS "MA_ZerosLotConversionUtility"

	FUNCTION ChangeLots()PROCESS
	FUNCTION LOCAL LogOpenFile(oObject,filePath$)LOG_OPEN_FILE
	FUNCTION LOCAL OpenFiles()OPEN_FILES

	LOCAL SO_SalesOrderDistFH
	LOCAL SO404_OrderTierDistFH
	LOCAL IM_ItemCostFH
	LOCAL IM404_ItemLocQtyFH

	LOCAL TierType$ = "3"

	! maybe?
	! LOCAL SO404_OrderAllocHeadFH
	! LOCAL SO404_OrderAllocDetFH
	! LOCAL IM_ItemLocUDFFH

END DEF
!
PROCESS:
	FilePath$ = "C:\Sage\ResaleConversion.csv"
	counter=0

	answer$ = %sys_ss'UI'MessageBox$("1","Run Utility To Convert LotSerialNos?","style=YESNO,icon=!")
	IF (answer$ = "YES") {
		cCSVFH = HFN
		itemCostCounter=0
		soTierDistcounter=0
		so404TierCounter=0
		IM404Counter=0

		mwaRetVal = _OBJ'LogOpenFile(cCSVFH,FilePath$)
		!msgbox(STR(mwaRetVal))
		IF (mwaRetVal = 1) {
			DIM fileData$[7]
			
			counter=0
			itemCostReadFH = %sys_ss'OpenTable("IM_ItemCost","COMPANY")
			itemCostWriteFH = %sys_ss'OpenTable("IM_ItemCost","COMPANY")
			SO_SalesOrderDistFH = %sys_ss'OpenTable("SO_SalesOrderTierDistribution","COMPANY")
			SO404_OrderTierDistReadFH = %sys_ss'OpenTable("SO404_OrderTierDist","COMPANY")
			SO404_OrderTierDistWriteFH = %sys_ss'OpenTable("SO404_OrderTierDist","COMPANY")
			itemLocReadFH = %sys_ss'OpenTable("IM404_ItemLocationQuantity","COMPANY")
			itemLocWriteFH  = %sys_ss'OpenTable("IM404_ItemLocationQuantity","COMPANY")
			READ(cCSVFH, ERR=*NEXT)line$ ! skip the first line of headers
			WHILE (1)
				READ(cCSVFH, END=*BREAK)line$
				READ DATA FROM line$,SEP="," TO fileData${all}
				itemNo$ = fileData$[0]
				whseNo$ = fileData$[1]
				binLoc$ = fileData$[2]
				qtyOnHand$ = fileData$[3]
				qtyAllocated$ = fileData$[4]
				currentSageLot$ = fileData$[5]
				serialNo$ = fileData$[6]




				SELECT *, REC=rec$ FROM itemCostReadFH BEGIN itemNo$:$$ END itemNo$:$FE$ 
				IF (rec.LotSerialNo$ = currentSageLot$) {
					oldKey$ = KEC(itemCostReadFH)
					rec.GroupSort$ = serialNo$
					rec.LotSerialNo$ = serialNo$
					rec.UDF_FORMATTEDLOTNO$ = currentSageLot$
					WRITE(itemCostWriteFH,REC=rec$)
					REMOVE(itemCostWriteFH,KEY=oldKey$)
					itemCostCounter++	
				}
				NEXT RECORD 
				
				!

				SELECT *, REC=rec$ FROM SO_SalesOrderDistFH, KNO="kItemWarehouse" BEGIN itemNo$:$00$ END itemNo$:$FE$
					IF (rec.LotSerialNo$ = currentSageLot$) {
						oldKey$ = KEC(SO_SalesOrderDistFH)
						oldSONo$ = rec.SalesOrderNo$
						oldLineKey$ = rec.LineKey$
						oldLotSerialNo$ = rec.LotSerialNo$

						rec.LotSerialNo$ = serialNo$
						WRITE(SO_SalesOrderDistFH,REC=rec$)
						REMOVE(SO_SalesOrderDistFH,KEY=oldSONo$:oldLineKey$:oldLotSerialNo$)
						!REMOVE(SO_SalesOrderDistFH,KEY=oldKey$)
						soTierDistcounter++
					}
				NEXT RECORD

				!

				SELECT *, REC=rec$ FROM SO404_OrderTierDistReadFH, KNO="kItem" BEGIN itemNo$:$00$ END itemNo$:$FE$
				
					IF (rec.LotSerialNo$ = currentSageLot$) AND (rec.BinLocation$ = binLoc$) {
							!PREINPUT-1301; ESCAPE
							oldKey$ = KEC(SO404_OrderTierDistReadFH)
							oldSalesOrderNo$ = rec.SalesOrderNo$
							oldLineKey$ = rec.LineKey$
							oldLotSerialNo$ = rec.LotSerialNo$
							oldBinLocation$ = rec.binLocation$
							oldPalletID$ = rec.PalletID$

							rec.LotSerialNo$ = serialNo$
							!MSGBOX(REC.LotSerialNo$)
							!msgbox(rec$)
							WRITE(SO404_OrderTierDistWriteFH,REC=rec$)
							REMOVE(SO404_OrderTierDistWriteFH,KEY=oldSalesOrderNo$:oldLineKey$:oldLotSerialNo$:oldBinLocation$:oldPalletID$)
							so404TierCounter++
					}
				NEXT RECORD
				!

				SELECT *, REC=rec$ FROM itemLocReadFH BEGIN itemNo$:$00$ END itemNo$:$FE$
					IF (rec.LotSerialNo$ = currentSageLot$) AND (rec.BinLocation$ = binLoc$) {
						oldKey$ = KEC(itemLocReadFH)
						oldItemCode$ = rec.ItemCode$
						oldWhseCode$ = rec.WarehouseCode$
						oldLotSerialNo$ = rec.LotSerialNo$
						oldBinLocation$ = rec.BinLocation$
						oldPalletID$ = rec.PalletID$

						rec.LotSerialNo$ = serialNo$
						WRITE(itemLocWriteFH,REC=rec$)
						REMOVE(itemLocWriteFH,KEY=oldItemCode$:oldWhseCode$:oldLotSerialNo$:oldBinLocation$:oldPalletID$)
						IM404Counter++
					}
				NEXT RECORD
				!
				! maybe?
				!SO404_OrderAllocHeadFH
				!SO404_OrderAllocDetFH
				!IM_ItemLocUDFFH
			counter++
			WEND
			MSGBOX("Utility Finished. IM_ItemCost Recs: " + STR(itemCostCounter) + "| SO Tier Dist Recs: " + STR(soTierDistcounter) +"| SO 404 Recs: " + STR(so404TierCounter) + "| IM 404 Recs: " + STR(IM404Counter))
		} ELSE {
			 %sys_ss'UI'MessageBox$("1","Failed to open the file")
		}
	} ELSE {
		 %sys_ss'UI'MessageBox$("1","Utility Cancelled")
	}
	CLOSE(itemCostWriteFH)
	CLOSE(itemCostReadFH)
	CLOSE(SO_SalesOrderDistFH)
	CLOSE(itemLocReadFH)
	CLOSE(itemLocWriteFH)
	CLOSE(SO404_OrderTierDistReadFH)
	CLOSE(SO404_OrderTierDistWriteFH)
RETURN
!
LOG_OPEN_FILE:
	ENTER (oObject),(filePath$)
	Open(oObject,ERR=*NEXT)filePath$;mwaRetVal=1
	IF mwaRetVal=0 {
	}
RETURN mwaRetVal
!
OPEN_FILES:
	
	SO_SalesOrderDistFH = %sys_ss'OpenTable("SO_SalesOrderTierDistribution","COMPANY")
	SO404_OrderTierDistFH = %sys_ss'OpenTable("SO404_OrderTierDist","COMPANY")
	IM_ItemCostFH = %sys_ss'OpenTable("IM_ItemCost","COMPANY")
	IM404_ItemLocQtyFH = %sys_ss'OpenTable("IM404_ItemLocationQuantity","COMPANY")
RETURN retSUCCESS
